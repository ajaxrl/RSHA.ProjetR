order = "hclust",
number.cex = 1.2,
tl.cex = 1.2,
tl.col = "#2d3748",
tl.srt = 45,
diag = TRUE,
addCoef.col = "#2d3748",
number.font = 2,
cl.cex = 1.2,
cl.pos = "n"
)
library(viridis)
library(wordcloud)
library(RColorBrewer)
library(tidyr)
data = read_csv("CSV/base_emp_inno.csv", show_col_types = FALSE)
split_skills <- separate_rows(data, top_skill_req, sep = ",\\s*") %>%
mutate(top_skill_req = tolower(trimws(top_skill_req)))
data5 <- split_skills %>%
group_by(top_skill_req) %>%
summarise(
n_patents = sum(n_patents, na.rm = TRUE)
) %>%
ungroup() %>%
filter(!is.na(top_skill_req) & n_patents > 0)
num_words <- nrow(data5)
colors_palette <- colorRampPalette(brewer.pal(9, "Set1"))(num_words)
wordcloud(
words = data10$top_skill_req,
freq = data10$n_patents,
min.freq = 1,
max.words = 100,
random.order = FALSE,
rot.per = 0.25,
scale = c(3, 0.5),
colors = colors_palette,
family = "sans",
ordered.colors = TRUE
)
library(readr)
library(ggplot2)
library(plotly)
library(tidyr)
library(dplyr)
data = read_csv("CSV/base_emp_inno.csv", show_col_types = FALSE)
split_skills <- separate_rows(data, top_skill_req, sep = ",\\s*") %>%
mutate(top_skill_req = tolower(trimws(top_skill_req)))
data10 <- split_skills %>%
group_by(top_skill_req) %>%
summarise(
n_patents = sum(n_patents, na.rm = TRUE),
n_offres = sum(n_offres, na.rm = TRUE)
) %>%
ungroup() %>%
filter(!is.na(top_skill_req) & n_patents > 0 & n_offres > 0)
data10 <- data10 %>%
mutate(
tooltip = paste0(
"<b>Compétence:</b> ", top_skill_req,
"<br><b>Nombre de brevets:</b> ", n_patents,
"<br><b>Offres d'emploi:</b> ", n_offres
)
)
scatterplot_jobs <- ggplot(data10, aes(
x = n_patents,
y = n_offres,
color = top_skill_req,
text = tooltip
)) +
geom_point(size = 5, alpha = 0.8) +
scale_x_log10() +
scale_y_log10() +
labs(
x = "Nombre de brevets (échelle log)",
y = "Nombre d'offres d'emploi (échelle log)",
color = "Compétence"
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", color = "darkblue"),
axis.title = element_text(face = "bold"),
legend.position = "none",
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = "gray90", linetype = "dashed")
)
interactive_scatterplot_jobs <- ggplotly(scatterplot_jobs, tooltip = "text")
interactive_scatterplot_jobs
library(readr)
library(ggplot2)
library(plotly)
library(dplyr)
data = read_excel("output.xlsx")
library(readxl)
library(ggplot2)
library(plotly)
library(dplyr)
data = read_excel("output.xlsx")
library(readxl)
library(ggplot2)
library(plotly)
library(dplyr)
data = read_excel("CSV/base_emp_inno.xlsx")
data1 = data %>%
group_by(firm_name) %>%
summarise(
n_patents = sum(n_patents, na.rm = TRUE),
avg_wage = mean(avg_wage, na.rm = TRUE)
) %>%
ungroup() %>%
filter(n_patents > 0, avg_wage > 0)
graph1 = ggplot(data1, aes(
x = n_patents,
y = avg_wage,
color = firm_name,
text = paste0(
"<b>Entreprise :</b> ", firm_name,
"<br><b>Nombre de brevets :</b> ", n_patents,
"<br><b>Salaire moyen :</b> ", avg_wage, " €"
)
)) +
geom_point(size = 6, alpha = 0.7) +
geom_text(
aes(label = firm_name),
size = 4,
nudge_y = 0.05 * max(data1$avg_wage),
fontface = "bold",
color = "gray80",
check_overlap = TRUE
) +
geom_text(
aes(label = firm_name),
size = 4.2,
nudge_y = 0.05 * max(data1$avg_wage),
fontface = "bold",
color = "black",
check_overlap = TRUE
) +
scale_color_viridis_d(option = "D") +
scale_x_log10() +
labs(
x = "Nombre de brevets (échelle logarithmique)",
y = "Salaire annuel moyen (en euros)"
) +
theme_minimal(base_size = 16) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", color = "darkblue"),
axis.title = element_text(face = "bold"),
legend.position = "none",
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = "gray90", linetype = "dashed")
)
interactive_graph1 = ggplotly(graph1, tooltip = "text")
interactive_graph1
library(readxl)
library(ggplot2)
library(plotly)
data = read_excel("CSV/base_emp_inno.xlsx")
data2= data[!is.na(data$n_patents) & !is.na(data$n_offres), ]
graph2 = ggplot(data2, aes(
x = n_patents,
y = n_offres,
color = firm_name,
text = paste0(
"<b>Entreprise :</b> ", firm_name,
"<br><b>Nombre de brevets :</b> ", n_patents,
"<br><b>Offres d'emploi :</b> ", n_offres
)
)) +
geom_point(size = 2, alpha = 0.9) +
scale_color_viridis_d(option = "D") +
scale_x_log10() +
scale_y_log10() +
labs(
x = "Nombre de brevets (échelle logarithmique)",
y = "Nombre d'offres d'emploi"
) +
theme_minimal(base_size = 16) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", color = "darkblue"),
axis.title = element_text(face = "bold"),
legend.position = "none",
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = "gray90", linetype = "dashed")
)
interactive_graph2 = ggplotly(graph2, tooltip = "text")
interactive_graph2
library(readxl)
library(ggplot2)
library(plotly)
data = read_excel("CSV/base_emp_inno.xlsx")
data7 = data %>%
group_by(ipc_main_code) %>%
summarise(
n_patents = sum(n_patents, na.rm = TRUE),
avg_wage = mean(avg_wage, na.rm = TRUE)
) %>%
ungroup() %>%
filter(!is.na(ipc_main_code) & n_patents > 0 & avg_wage > 0)
graph7 = ggplot(data7, aes(
x = n_patents,
y = avg_wage,
color = ipc_main_code,
text = paste0(
"<b>Code IPC :</b> ", ipc_main_code,
"<br><b>Nombre de brevets :</b> ", round(n_patents, 2),
"<br><b>Salaire moyen :</b> ", round(avg_wage, 2), " €"
)
)) +
geom_point(size = 6, alpha = 0.7) +
geom_text(
aes(label = ipc_main_code),
size = 4,
nudge_y = 0.05 * max(data7$avg_wage, na.rm = TRUE),
fontface = "bold",
color = "gray80",
check_overlap = TRUE
) +
geom_text(
aes(label = ipc_main_code),
size = 4.2,
nudge_y = 0.05 * max(data7$avg_wage, na.rm = TRUE),
fontface = "bold",
color = "black",
check_overlap = TRUE
) +
scale_color_viridis_d(option = "D") +
scale_x_log10() +
labs(
x = "Nombre moyen de brevets (échelle logarithmique)",
y = "Salaire moyen (en euros)",
color = "Code IPC"
) +
theme_minimal(base_size = 16) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", color = "darkblue"),
axis.title = element_text(face = "bold"),
legend.position = "right",
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = "gray90", linetype = "dashed")
)
interactive_graph7 = ggplotly(graph7, tooltip = "text")
interactive_graph7
library(readxl)
library(corrplot)
library(dplyr)
library(ggcorrplot)
data = read_excel("CSV/base_emp_inno.xlsx")
data2 = data %>%
mutate(Offres = n_offres, Brevets = n_patents, Salaires = avg_wage)
corrplot(
cor(data2[, c("Offres", "Brevets", "Salaires")], use = "complete.obs"),
method = "number",
order = "hclust",
number.cex = 1.2,
tl.cex = 1.2,
tl.col = "#2d3748",
tl.srt = 45,
diag = TRUE,
addCoef.col = "#2d3748",
number.font = 2,
cl.cex = 1.2,
cl.pos = "n"
)
library(viridis)
library(wordcloud)
library(RColorBrewer)
library(tidyr)
library(readxl)
data = read_excel("CSV/base_emp_inno.xlsx")
split_skills <- separate_rows(data, top_skill_req, sep = ",\\s*") %>%
mutate(top_skill_req = tolower(trimws(top_skill_req)))
data5 <- split_skills %>%
group_by(top_skill_req) %>%
summarise(
n_patents = sum(n_patents, na.rm = TRUE)
) %>%
ungroup() %>%
filter(!is.na(top_skill_req) & n_patents > 0)
num_words <- nrow(data5)
colors_palette <- colorRampPalette(brewer.pal(9, "Set1"))(num_words)
wordcloud(
words = data10$top_skill_req,
freq = data10$n_patents,
min.freq = 1,
max.words = 100,
random.order = FALSE,
rot.per = 0.25,
scale = c(3, 0.5),
colors = colors_palette,
family = "sans",
ordered.colors = TRUE
)
library(viridis)
library(wordcloud)
library(RColorBrewer)
library(tidyr)
library(readxl)
data = read_excel("CSV/base_emp_inno.xlsx")
split_skills <- separate_rows(data, top_skill_req, sep = ",\\s*") %>%
mutate(top_skill_req = tolower(trimws(top_skill_req)))
data5 <- split_skills %>%
group_by(top_skill_req) %>%
summarise(
n_patents = sum(n_patents, na.rm = TRUE)
) %>%
ungroup() %>%
filter(!is.na(top_skill_req) & n_patents > 0)
num_words <- nrow(data5)
colors_palette <- colorRampPalette(brewer.pal(9, "Set1"))(num_words)
wordcloud(
words = data5$top_skill_req,
freq = data5$n_patents,
min.freq = 1,
max.words = 100,
random.order = FALSE,
rot.per = 0.25,
scale = c(3, 0.5),
colors = colors_palette,
family = "sans",
ordered.colors = TRUE
)
library(readxl)
library(ggplot2)
library(plotly)
library(tidyr)
library(dplyr)
data = read_excel("CSV/base_emp_inno.xlsx")
split_skills <- separate_rows(data, top_skill_req, sep = ",\\s*") %>%
mutate(top_skill_req = tolower(trimws(top_skill_req)))
data10 <- split_skills %>%
group_by(top_skill_req) %>%
summarise(
n_patents = sum(n_patents, na.rm = TRUE),
n_offres = sum(n_offres, na.rm = TRUE)
) %>%
ungroup() %>%
filter(!is.na(top_skill_req) & n_patents > 0 & n_offres > 0)
data10 <- data10 %>%
mutate(
tooltip = paste0(
"<b>Compétence:</b> ", top_skill_req,
"<br><b>Nombre de brevets:</b> ", n_patents,
"<br><b>Offres d'emploi:</b> ", n_offres
)
)
scatterplot_jobs <- ggplot(data10, aes(
x = n_patents,
y = n_offres,
color = top_skill_req,
text = tooltip
)) +
geom_point(size = 5, alpha = 0.8) +
scale_x_log10() +
scale_y_log10() +
labs(
x = "Nombre de brevets (échelle logarithmique)",
y = "Nombre d'offres d'emploi (échelle logarithmique)",
color = "Compétence"
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", color = "darkblue"),
axis.title = element_text(face = "bold"),
legend.position = "none",
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = "gray90", linetype = "dashed")
)
interactive_scatterplot_jobs <- ggplotly(scatterplot_jobs, tooltip = "text")
interactive_scatterplot_jobs
library(viridis)
library(wordcloud)
library(RColorBrewer)
library(tidyr)
library(readxl)
data = read_excel("CSV/base_emp_inno.xlsx")
split_skills <- separate_rows(data, top_skill_req, sep = ",\\s*") %>%
mutate(top_skill_req = tolower(trimws(top_skill_req)))
data5 <- split_skills %>%
group_by(top_skill_req) %>%
summarise(
n_patents = sum(n_patents, na.rm = TRUE)
) %>%
ungroup() %>%
filter(!is.na(top_skill_req) & n_patents > 0)
num_words <- nrow(data5)
colors_palette <- colorRampPalette(brewer.pal(9, "Set1"))(num_words)
wordcloud(
words = data5$top_skill_req,
freq = data5$n_patents,
min.freq = 1,
max.words = 100,
random.order = FALSE,
rot.per = 0.25,
scale = c(5, 0.5),
colors = colors_palette,
family = "sans",
ordered.colors = TRUE
)
library(viridis)
library(wordcloud)
library(RColorBrewer)
library(tidyr)
library(readxl)
data = read_excel("CSV/base_emp_inno.xlsx")
split_skills <- separate_rows(data, top_skill_req, sep = ",\\s*") %>%
mutate(top_skill_req = tolower(trimws(top_skill_req)))
data5 <- split_skills %>%
group_by(top_skill_req) %>%
summarise(
n_patents = sum(n_patents, na.rm = TRUE)
) %>%
ungroup() %>%
filter(!is.na(top_skill_req) & n_patents > 0)
num_words <- nrow(data5)
colors_palette <- colorRampPalette(brewer.pal(9, "Set1"))(num_words)
wordcloud(
words = data5$top_skill_req,
freq = data5$n_patents,
min.freq = 1,
max.words = 100,
random.order = FALSE,
rot.per = 0.25,
scale = c(6, 0.5),
colors = colors_palette,
family = "sans",
ordered.colors = TRUE
)
library(viridis)
library(wordcloud)
library(RColorBrewer)
library(tidyr)
library(readxl)
data = read_excel("CSV/base_emp_inno.xlsx")
split_skills = separate_rows(data, top_skill_req, sep = ",\\s*") %>%
mutate(top_skill_req = tolower(trimws(top_skill_req)))
data5 = split_skills %>%
group_by(top_skill_req) %>%
summarise(
n_patents = sum(n_patents, na.rm = TRUE)
) %>%
ungroup() %>%
filter(!is.na(top_skill_req) & n_patents > 0)
num_words = nrow(data5)
colors_palette = colorRampPalette(brewer.pal(9, "Set1"))(num_words)
wordcloud(
words = data5$top_skill_req,
freq = data5$n_patents,
min.freq = 1,
max.words = 100,
random.order = FALSE,
rot.per = 0.25,
scale = c(6, 0.5),
colors = colors_palette,
family = "sans",
ordered.colors = TRUE
)
library(readxl)
library(ggplot2)
library(plotly)
library(dplyr)
data = read_excel("CSV/base_emp_inno.xlsx")
data1 = data %>%
group_by(firm_name) %>%
summarise(
n_patents = sum(n_patents, na.rm = TRUE),
avg_wage = mean(avg_wage, na.rm = TRUE)
) %>%
ungroup() %>%
filter(n_patents > 0, avg_wage > 0)
graph1 = ggplot(data1, aes(
x = n_patents,
y = avg_wage,
color = firm_name,
text = paste0(
"<b>Entreprise :</b> ", firm_name,
"<br><b>Nombre de brevets :</b> ", n_patents,
"<br><b>Salaire moyen :</b> ", avg_wage, " €"
)
)) +
geom_point(size = 6, alpha = 0.7) +
geom_text(
aes(label = firm_name),
size = 4,
nudge_y = 0.05 * max(data1$avg_wage),
fontface = "bold",
color = "gray80",
check_overlap = TRUE
) +
geom_text(
aes(label = firm_name),
size = 4.2,
nudge_y = 0.05 * max(data1$avg_wage),
fontface = "bold",
color = "black",
check_overlap = TRUE
) +
scale_color_viridis_d(option = "D") +
scale_x_log10() +
labs(
x = "Nombre de brevets (échelle logarithmique)",
y = "Salaire annuel moyen (en euros)"
) +
theme_minimal(base_size = 16) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", color = "darkblue"),
axis.title = element_text(face = "bold"),
legend.position = "none",
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = "gray90", linetype = "dashed")
)
interactive_graph1 = ggplotly(graph1, tooltip = "text")
interactive_graph1
